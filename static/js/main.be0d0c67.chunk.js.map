{"version":3,"sources":["NavBar.js","Form.js","JobList.js","JobSearch.js","JobDetail.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","style","backgroundColor","src","process","alt","Form","props","useState","job","setJob","location","setLocation","isFullTime","setIsFullTime","onSubmit","event","preventDefault","type","onChange","target","value","name","placeholder","onClick","onPassedDays","date","currentDate","Date","targetDate","getDay","diffDays","Math","round","abs","JobList","jobs","history","state","useHistory","handleClick","useCallback","push","id","map","index","title","company","created_at","JobSearch","setJobs","setState","values","a","axios","get","res","isEmpty","data","useEffect","fetcData","color","JobDetail","useParams","console","log","to","xmlns","viewBox","fill","fillRule","d","clipRule","company_logo","overflowWrap","dangerouslySetInnerHTML","__html","description","how_to_apply","App","path","children","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.be0d0c67.chunk.js","sourcesContent":["import React from \"react\";\nfunction NavBar() {\n  return (\n    <div\n      className=\"w-full\"\n      style={{ backgroundColor: \"#24292e\" }}\n    >\n      <div className=\"sm:px-60 flex items-center\">\n        <img className=\"w-14 p-2 mr-4\" src={process.env.PUBLIC_URL + \"/assets/illustration/logo.png\"} alt=\"gitcat logo\" />\n       <div className=\"text-md text-purple-100 font-extrabold font-inter\">GitCat Jobs</div> \n      </div>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React, { useState } from \"react\";\n\nfunction Form(props) {\n  const [job, setJob] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [isFullTime, setIsFullTime] = useState(\"\");\n\n  const handleJobChange = (event) => {\n    setJob(event.target.value);\n  };\n\n  const handleLocationChange = (event) => {\n    setLocation(event.target.value);\n  };\n\n  const handleFullTime = () => {\n    setIsFullTime(!isFullTime);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.onSubmit({ job, location, isFullTime });\n  };\n\n  return (\n    <form className=\"sm:px-60 my-16\" onSubmit={handleSubmit}>\n      <div className=\"flex sm:flex-row flex-col w-full\">\n        <div className=\"sm:mr-6 px-6 sm:px-0 w-full mb-2\">\n          <label className=\"text-lg font-bold text-gray-900 tracking-tight\">\n            Job description\n          </label>\n          <input\n            type=\"text\"\n            className=\"w-full mt-1 p-2  rounded focus:outline-none focus:border-green-500 border-gray-300 focus:ring-green-500 outline-none\"\n            onChange={handleJobChange}\n            name=\"job\"\n            placeholder=\"JavaScript, Python, Ruby...\"\n          />\n        </div>\n        <div className=\"sm:mr-6 px-6 sm:px-0 w-full\">\n          <label className=\"text-lg font-bold text-gray-900 tracking-tight\">\n            Location\n          </label>\n          <input\n            type=\"text\"\n            className=\"w-full mt-1 p-2 rounded focus:border-green-500 focus:ring-green-500 outline-none border-gray-300\"\n            onChange={handleLocationChange}\n            name=\"location\"\n            placeholder=\"New York, Canada...\"\n          />\n        </div>\n\n        <div className=\"flex sm:items-end flex-col sm:flex-row px-6 sm:px-0 w-full justify-between\">\n          <div className=\"sm:mr-4 sm:ml-4 mb-6 mt-6 sm:mt-0 sm:mb-0 flex items-center\">\n            <span className=\"text-lg font-bold text-gray-900 tracking-tight mr-2\">\n              Full time only\n            </span>\n            <input\n              type=\"checkbox\"\n              className=\"h-5 w-5 cursor-pointer text-green-500 rounded focus:ring-green-500 border-gray-300\"\n              onClick={handleFullTime}\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"text-lg p-2.5 rounded-md font-bold leading-5 text-white bg-green-500 shadow-sm hover:bg-green-500 focus:outline-none focus:shadow-outline-green active:bg-green-500\"\n          >\n            Search\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default Form;\n","import React, { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst onPassedDays = (date) => {\n  const oneDayInMilliseconds = 24 * 60 * 60 * 1000;\n  const currentDate = new Date();\n  const targetDate = new Date(date);\n\n  if (currentDate.getDay() === targetDate.getDay()) {\n    return \"Today\";\n  } else {\n    const diffDays = Math.round(\n      Math.abs((currentDate - targetDate) / oneDayInMilliseconds)\n    );\n    if (diffDays > 1) {\n      return `${diffDays} days ago`;\n    } else {\n      return `${diffDays} day ago`;\n    }\n  }\n};\n\nfunction JobList({ jobs, state }) {\n  let history = useHistory();\n\n  const handleClick = useCallback((job) => {\n    history.push(`job/${job.id}`);\n  });\n\n  return (\n    <div className=\"sm:px-60 px-6\">\n     \n        <>\n          <h1 className=\"text-3xl font-extrabold text-gray-900 tracking-tight mb-8\">\n            Featured job\n          </h1>\n          <div className=\"flex flex-col cursor-pointer w-full\">\n            <div className=\"flex w-full flex-col bg-white divide-y \">\n              {jobs.map((job, index) => (\n                <button\n                  className=\" text-left p-4  hover:bg-gray-50 focus:outline-none\"\n                  key={index}\n                  onClick={() => handleClick(job)}\n                >\n                  <div className=\"flex sm:justify-between flex-col sm:flex-row\">\n                    <div className=\"mb-4\">\n                      <div className=\"mb-2\">{job.title}</div>\n                      <div className=\"mb-2 text-md truncate w-full normal-case font-normal -mt-1 text-gray-500\">\n                        {job.company}\n                      </div>\n                      <div className=\"text-sm truncate w-full -mt-1 text-green-500 font-bold\">\n                        {job.type}\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"mb-2 text-md truncate w-full normal-case font-normal -mt-1 text-gray-500 sm:text-right\">\n                        {job.location}\n                      </div>\n                      <div className=\"text-sm truncate w-full normal-case font-normal -mt-1 text-gray-500 sm:text-right\">\n                        {onPassedDays(job.created_at)}\n                      </div>\n                    </div>\n                  </div>\n                </button>\n              ))}\n            </div>\n          </div>\n        </>\n    </div>\n  );\n}\n\nexport default JobList;\n","import React, { useEffect, useState } from \"react\";\nimport Form from \"./Form\";\nimport JobList from \"./JobList\";\nimport axios from \"axios\";\nimport SyncLoader from \"react-spinners/SyncLoader\";\nimport { isEmpty } from \"lodash\";\n\nconst JobSearch = () => {\n  const [jobs, setJobs] = useState([]);\n  const [state, setState] = useState(\"\");\n\n  useEffect(() => {\n    async function fetcData() {\n      try {\n        setState(\"loading\");\n        let res = await axios.get(\n          \"https://cors-denise.herokuapp.com/https://jobs.github.com/positions.json?description=python\"\n        );\n        setState(\"ready\");\n        setJobs(res.data);\n      } catch {\n        setState(\"error\");\n      }\n    }\n    fetcData();\n  }, []);\n\n  async function onSubmit(values) {\n    try {\n      setState(\"loading\");\n      let res = await axios.get(\n        ` https://cors-denise.herokuapp.com/https://jobs.github.com/positions.json?description=${values.job}&full_time=${values.isFullTime}&location=${values.location}`\n      );\n      if (isEmpty(res.data)) {\n        setState(\"empty\");\n      } else {\n        setState(\"ready\");\n      }\n      setJobs(res.data);\n    } catch {\n      setState(\"error\");\n    }\n  }\n\n  return (\n    <>\n      <Form onSubmit={onSubmit} />\n      {state === \"loading\" && (\n        <div className=\"flex justify-center mt-28\">\n          <SyncLoader color={\"#10B981\"} />\n        </div>\n      )}\n      {state === \"empty\" && (\n        <div className=\"flex justify-center mt-20\">\n          <div className=\"flex flex-col\">\n            <img src={process.env.PUBLIC_URL + \"/assets/illustration/no-result.png\"} alt=\"cat\" className=\"mb-4\" />\n            <h1 className=\"text-2xl font-extrabold text-gray-900 tracking-tight uppercase text-center\">\n              no jobs found\n            </h1>\n          </div>\n        </div>\n      )}\n      {state === \"ready\" && <JobList jobs={jobs} state={state} />}\n    </>\n  );\n};\n\nexport default JobSearch;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport SyncLoader from \"react-spinners/SyncLoader\";\nimport JobDetailCss from './JobDetailCss.css'\n\n\nfunction JobDetail({ jobs }) {\n  const [job, setJob] = useState(\"\");\n  const [state, setState] = useState(\"\");\n\n  let { id } = useParams();\n\n  useEffect(() => {\n    async function fetcData() {\n      try {\n        setState(\"loading\");\n        let res = await axios.get(\n          `https://cors-denise.herokuapp.com/https://jobs.github.com/positions/${id}.json`\n        );\n        setState(\"ready\");\n        setJob(res.data);\n      } catch {\n        setState(\"error\");\n        console.log(\"error\");\n      }\n    }\n    fetcData();\n  }, [id]);\n\n  return (\n    <div className=\"sm:px-60 px-2 my-16\">\n        {state === \"loading\" && (\n        <div className=\"flex justify-center mt-28\">\n          <SyncLoader color={\"#10B981\"} />\n        </div>\n      )}\n      {state === \"ready\" && (\n        <>\n          <Link to=\"/\">\n            <button className=\"flex bg-green-500 text-white font-bold px-2 py-1 rounded-md mb-8 shadow-sm hover:bg-green-500 focus:outline-none focus:shadow-outline-green active:bg-green-500\">\n              <svg\n                className=\"w-6 mr-2\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\"\n                  clipRule=\"evenodd\"\n                />\n              </svg>\n              <div>See all positions</div>\n            </button>\n          </Link>\n          <div className=\"flex w-full flex-col bg-white p-4 sm:p-8\">\n            <div className=\"mb-8 flex flex-col sm:flex-row sm:justify-between w-full\">\n              <div className=\"w-full\">\n                <div className=\"text-2xl font-extrabold text-gray-900 tracking-tight mb-4\">\n                  {job.title}\n                </div>\n                <div className=\"text-sm truncate w-full -mt-1 text-green-500 font-bold mb-4\">\n                  {job.type}\n                </div>\n              </div>\n              <div className=\"sm:ml-2 flex sm:block mb-4 sm:mb-0\">\n                <div className=\"sm:text-right self-center sm:self-auto mb-2 truncate w-full text-gray-500\">\n                  {job.company}\n                </div>\n                <img\n                  className=\"w-20\"\n                  src={job.company_logo}\n                  alt=\"company logo\"\n                />\n              </div>\n              <hr />\n            </div>\n            <div className=\"mb-8\">\n              <div className=\"text-2xl font-extrabold text-gray-900 tracking-tight mb-4\">\n                Description\n              </div>\n              <div\n                className=\"text-gray-500 text-lg\"\n                style={{ overflowWrap: \"break-word\" }}\n                dangerouslySetInnerHTML={{ __html: job.description }}\n              ></div>\n            </div>\n            <div className=\"mb-8\">\n              <div className=\"text-2xl font-extrabold text-gray-900 tracking-tight mb-4\">\n                Apply now 👇\n              </div>\n              <div\n                style={{ overflowWrap: \"break-word\" }}\n                dangerouslySetInnerHTML={{ __html: job.how_to_apply }}\n              ></div>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default JobDetail;\n","import React from \"react\";\nimport \"./App.css\";\nimport \"./NavBar.js\";\nimport \"./index.css\";\nimport NavBar from \"./NavBar.js\";\nimport JobSearch from \"./JobSearch\";\nimport JobDetail from \"./JobDetail\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <NavBar />\n      <Switch>\n        <Route path=\"/job/:id\" children={<JobDetail />} />\n        <Route path=\"/\" children={<JobSearch />} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}